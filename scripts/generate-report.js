/**
 * Report Generation Script for GitHub Actions
 * Generates comprehensive analysis reports from repository analysis data
 */

const fs = require('fs');
const path = require('path');

async function generateReport() {
  try {
    const outputDir = './analysis-results';
    const reportsDir = './reports';

    // Create directories if they don't exist
    if (!fs.existsSync(reportsDir)) {
      fs.mkdirSync(reportsDir, { recursive: true });
    }

    // Read latest analysis results
    const files = fs.readdirSync(outputDir)
      .filter(f => f.startsWith('git-analysis-'))
      .sort()
      .reverse();

    if (files.length === 0) {
      console.log('No analysis files found');
      return;
    }

    const latestFile = files[0];
    const analysisData = JSON.parse(
      fs.readFileSync(path.join(outputDir, latestFile), 'utf8')
    );

    // Generate markdown report
    const report = generateMarkdownReport(analysisData);

    // Save report
    const reportFile = path.join(reportsDir, `analysis-report-${new Date().toISOString().split('T')[0]}.md`);
    fs.writeFileSync(reportFile, report);

    console.log(`📄 Report saved to: ${reportFile}`);

    // Set output for next steps
    console.log(`::set-output name=report-file::${reportFile}`);
    console.log(`::set-output name=health-score::${analysisData.repository_health.overall_health}`);

  } catch (error) {
    console.error('❌ Report generation error:', error);
    process.exit(1);
  }
}

function generateMarkdownReport(analysisData) {
  return `# Repository Analysis Report

## 📊 Overview

- **Analysis Date:** ${new Date().toISOString()}
- **Repository:** ${process.env.GITHUB_REPOSITORY}
- **Total Commits:** ${analysisData.commit_history.total_commits}
- **Active Contributors:** ${analysisData.commit_history.authors.length}
- **Repository Health:** ${analysisData.repository_health.overall_health.toUpperCase()}

## 🔍 Git Analysis

### Development Velocity
- **Commits per Day:** ${analysisData.commit_history.development_velocity.avg_commits_per_day}
- **Lines per Day:** ${analysisData.commit_history.development_velocity.avg_lines_per_day}
- **Development Intensity:** ${analysisData.commit_history.development_velocity.development_intensity}

### Repository Health Scores
- **Commit Frequency:** ${analysisData.repository_health.commit_frequency_score}/100
- **Contributor Diversity:** ${analysisData.repository_health.contributor_diversity_score}/100
- **Code Churn:** ${analysisData.repository_health.code_churn_score}/100
- **Branch Management:** ${analysisData.repository_health.branch_management_score}/100

### Hot Files (Frequently Modified)
${analysisData.commit_history.hot_files.slice(0, 10).map((file, index) =>
  `- ${file.filename} (${file.changes} changes, ${file.impact} impact)`
).join('\n')}

### Top Contributors
${analysisData.commit_history.authors.slice(0, 5).map((author, index) =>
  `- ${author.author}: ${author.commits} commits (Productivity: ${author.productivity_score})`
).join('\n')}

## 📋 Recommendations
${analysisData.recommendations.map((rec, index) =>
  `${index + 1}. ${rec}`
).join('\n')}

---

*This report was automatically generated by the Repository Context Generator*
`;
}

generateReport();
